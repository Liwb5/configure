# ----------------快捷键重映射----------------- #
set -g prefix C-a   # 设置前缀为Ctrl+a
unbind C-b    #解除绑定
bind C-a send-prefix
set-option -g prefix2 C-j
bind -r i last-window # 绑定i为切换最近使用到的两个窗口，默认的快捷键是l(L的小写)


# 绑定hjkl键为面板切换的上下左右键
bind k select-pane -U # 绑定k为↑
bind j select-pane -D # 绑定j为↓
bind h select-pane -L # 绑定h为←
bind l select-pane -R # 绑定l为→

bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"  # buffer缓存复制到Mac系统粘贴板
bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - \; paste-buffer -d" # Mac系统粘贴板内容复制到会话

# 在tmux窗口中，先按下Ctrl+b指令前缀，然后按下系统指令:，进入到命令模式后输入source-file ~/.tmux.conf，回车后生效。既然这样就用一个快捷键来方便source。
bind r source-file ~/.tmux.conf \; display-message "Config reloaded.."

# 设置分屏快捷键
unbind '"'
bind - splitw -v -c '#{pane_current_path}'  #上下分屏, 默认进入当前目录
unbind '%'
bind | splitw -h -c '#{pane_current_path}'  #左右分屏，默认进入当前目录
bind \ split-window -h -c '#{pane_current_path}'  #左右分屏，默认进入当前目录

bind c new-window -c "#{pane_current_path}"  # 新建窗口，默认进入当前目录

bind-key C-q confirm-before kill-session   #kill session
bind-key q confirm-before -p "kill-window #W? (y/n)" kill-window  # kill current windown
#bind-key , command-prompt -I #W "rename-window '%%'"   #rename the current window
bind-key m resize-pane -Z

# ----------------设置----------------- #
# set-option -g default-shell "~/.jumbo/bin/zsh"
# set-option -g default-shell "/bin/bash"
set-option -g history-limit 40000  # 设置历史回滚缓冲区大小，太大会消耗太多内存

#鼠标方面的设置
set -g mouse on     # 启用鼠标滚动, 此时在iterm2终端用鼠标进行文本复制的时候需要按住option键.

# 进入复制模式时，安装vi的按键模式操作
setw -g mode-keys vi

set -g default-terminal "screen-256color"

# ----------------状态栏的设置----------------- #
#setw -g utf8 on
#set-option -g status-utf8 on # 状态栏支持utf8
# set -g status-interval 1 # 状态栏刷新时间
set -g status-justify centre # 状态栏列表左对齐 left:  right:
setw -g monitor-activity off # 非当前窗口有内容更新时在状态栏通知
# setw -g monitor-silence on  # 非当前窗口在一定时间内没有内容更新的时候，就会有通知

set -g status-bg black # 设置状态栏背景黑色
set -g status-fg white # 设置状态栏前景黄色
set -g status-style "bg=black, fg=white" # 状态栏前景背景色

# status left options
set -g status-left "#[fg=green] ❐ #S " # 状态栏左侧内容
# set -g status-right 'Continuum status: #{continuum_status}' # 状态栏右侧内容
set -g status-right '"#h" %Y-%m-%d %H:%M'
set -g status-left-length 300 # 状态栏左边长度300
set -g status-right-length 500 # 状态栏右边长度500

# window list options
setw -g automatic-rename off
set -g base-index 0 # 设置窗口的起始下标
set -g renumber-windows #关掉某个窗口之后，编号重排
#set -g pane-base-index 1 # 设置面板的起始下标为1
set -wg window-status-format " #I #W#F " # 状态栏窗口名称格式
set -wg window-status-current-format " #I:#W#F " # 状态栏当前窗口名称格式(#I：序号，#w：窗口名称，#F：间隔符)
set -wg window-status-separator "" # 状态栏窗口名称之间的间隔
set -wg window-status-current-style "bg=blue" # 状态栏当前窗口名称的样式
#set -wg window-status-last-style "fg=red" # 状态栏最后一个窗口名称的样式

set -g message-style "bg=#202529, fg=#91A8BA" # 指定消息通知的前景、后景色

# 设置iterm标签栏显示hostname
set -g set-titles on
set -g set-titles-string "#h"

# 设置默认的shell
# set -g default-command /bin/zsh
# set -g default-shell /bin/zsh
